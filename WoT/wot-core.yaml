#repository
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: wot-core-repository
  namespace: wot-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wot-core-repository
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '38080'
      labels:
        app: wot-core-repository
    spec:
      containers:
      - name: wot-core-repository
        image: wot-core-repository:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 200m
          requests:
            cpu: 100m
---
apiVersion: v1
kind: Service
metadata:
  name: wot-core-repository-entrypoint
  namespace: wot-core
spec:
  type: NodePort
  selector:
    app: wot-core-repository
  ports:
  - port: 38080
    targetPort: 38080
    nodePort: 30003
---
#http server
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: wot-core-http-server
  namespace: wot-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wot-core-http-server
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '38090'
      labels:
        app: wot-core-http-server
    spec:
      containers:
      - name: wot-core-http-server
        image: wot-core-http-server:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 200m
          requests:
            cpu: 100m
---
apiVersion: v1
kind: Service
metadata:
  name: wot-core-http-server-entrypoint
  namespace: wot-core
spec:
  type: NodePort
  selector:
    app: wot-core-http-server
  ports:
  - port: 38090
    targetPort: 38090
    nodePort: 30002
---
#app launcher
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: wot-core-app-launcher
  namespace: wot-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wot-core-app-launcher
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '39080'
      labels:
        app: wot-core-app-launcher
    spec:
      containers:
      - name: wot-core-app-launcher
        image: wot-core-app-launcher:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 200m
          requests:
            cpu: 100m
---
apiVersion: v1
kind: Service
metadata:
  name: wot-core-app-launcher-entrypoint
  namespace: wot-core
spec:
  type: NodePort
  selector:
    app: wot-core-app-launcher
  ports:
  - port: 39080
    targetPort: 39080
    nodePort: 30001
---
apiVersion: v1
kind: ConfigMap
metadata: 
  name: mosquitto-config
  namespace: wot-core
data: 
  mosquitto.conf: |-
    port 1883
    protocol mqtt
    # websocket
    port 9001
    protocol websockets
    allow_anonymous true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wot-core-mosquitto
  namespace: wot-core
spec:
  selector:
    matchLabels:
      app: mosquitto
  template:
    metadata:
      labels:
        app: mosquitto
    spec:
      containers:
      - name: mosquitto
        image: eclipse-mosquitto:latest
        resources:
          requests:
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 1883
        - containerPort: 9001
        volumeMounts:
          - name: mosquitto-config
            mountPath: /mosquitto/config/mosquitto.conf
            subPath: mosquitto.conf
      volumes:
        - name: mosquitto-config
          configMap:
            name: mosquitto-config
---
apiVersion: v1
kind: Service
metadata:
  name: wot-core-mosquitto-entrypoint
  namespace: wot-core
spec:
  type: NodePort
  selector:
    app: mosquitto
  ports:
  - port: 1883
    targetPort: 1883
    nodePort: 30005
    name: "mosquitto"
  - port: 9001
    targetPort: 9001
    nodePort: 30004
    name: "websockets"